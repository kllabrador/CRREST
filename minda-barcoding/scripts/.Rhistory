infile_csv <- list.files(paste0(indir,
"BOLD-output"),
pattern = "\\.csv$",
full.names = T)
infile_csv_filenames <- list.files(paste0(indir,
"BOLD-output"),
pattern = "\\.csv$")
aln.fas <- read.FASTA(infile_fasta,
type = "DNA")
files.csv <- lapply (infile_csv,
read.csv,
na.strings = "N/A") %>%
map(., ~clean_names(.x))
names(files.csv) <- infile_csv_filenames
# MAF's appendix table 3
MAF.species.list <- readxl::read_xlsx(paste0(indir, "MAF_species-list.xlsx"),
sheet = "species-list") %>%
clean_names() %>%
select (family, scientific_name, data, barcode) %>%
distinct() %>%
separate_wider_delim(cols = scientific_name,
names = c("genus", "species"),
delim = " ",
cols_remove = F,
too_many="merge") %>%
mutate (source1 = "MAF")
# BOLD dataset
BOLD.species.list <- files.csv$`project-metadata_taxonomy.csv` %>%
clean_names() %>%
select (species) %>%
# Change genus names as appropriate (these cases are when BOLD Systems has not been updated yet)
mutate (species = str_replace(species, "Cromileptes", "Chromileptes"),
species = str_replace(species, "Xiphocheilus", "Choerodon"),
species = str_replace(species, "Ariomma brevimanum", "Ariomma brevimanus"),
species = str_replace(species, "Liopropoma sp.", "Liopropoma sp.1")
) %>%
mutate (barcode = "Y",
source2 = "BOLD") %>%
rename (scientific_name = species) %>%
distinct()
# Check unique species count
species_list_full <- c(MAF.species.list$scientific_name, BOLD.species.list$scientific_name) %>%
unique() %>% sort ()
species_list_unidentified <- species_list_full[which (grepl("sp.", species_list_full, fixed=T))]
species_list_identified_count <- length (species_list_full) - length (species_list_unidentified)
species_list_identified_count
view(BOLD.species.list)
species_list_full
species_list_unidentified
species_list_unidentified <- species_list_full[which (grepl("sp.", species_list_full, fixed=T))]
species_list_full
species_list_unidentified
species_list_identified_count
# Join the two datasheets
master_list <- full_join (MAF.species.list, BOLD.species.list, by = c("scientific_name", "barcode")) %>%
# Change Scaridae to Labridae
mutate (family = str_replace (family, "Scaridae", "Labridae")) %>%
# Modify "data" field
mutate (data = case_when (barcode %in% "Y" ~ "with barcodes",
grepl ("MSD", data) ~ "MSD",
T ~ "FVC"))
# Check for discrepancies between the two datasets.
validate_list <- master_list %>% filter (barcode == "Y")
write.csv(validate_list, paste0(outdir, "validate_species_list.csv"))
aln.fas
knitr::opts_chunk$set(echo = TRUE
, results = 'hide'
, warning = FALSE
, message = FALSE
, fig.height = 5
, fig.width = 5
)
# Clear the global environment.
rm(list=ls())
# Set-up the working directory in the source file location:
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
wd <- getwd() # Do this after the working directory was set to source file location
# Assign directories to objects in the global environment
indir <- paste0("../data/")
outdir <- paste0("../results/")
scripts <- paste0("../scripts/")
# Check content of indir using list.files()
list.files(indir)
list.files(scripts)
pacman::p_load (
# Data wrangling
tidyverse, janitor,
# Plotting
cowplot,
# Interfacing with sequence data
ape, bold, bioseq, haplotypes, phangorn,
# Statistical calculations
rstatix)
# Fasta file of the alignment
## Make sure that the alignment is done outside R.
infile_fasta <- paste0(indir,
"20240115_bold-aln.fas")
infile_csv <- list.files(paste0(indir,
"BOLD-output"),
pattern = "\\.csv$",
full.names = T)
infile_csv_filenames <- list.files(paste0(indir,
"BOLD-output"),
pattern = "\\.csv$")
aln.fas <- read.FASTA(infile_fasta,
type = "DNA")
files.csv <- lapply (infile_csv,
read.csv,
na.strings = "N/A") %>%
map(., ~clean_names(.x))
names(files.csv) <- infile_csv_filenames
# MAF's appendix table 3
MAF.species.list <- readxl::read_xlsx(paste0(indir, "MAF_species-list.xlsx"),
sheet = "species-list") %>%
clean_names() %>%
select (family, scientific_name, data, barcode) %>%
distinct() %>%
separate_wider_delim(cols = scientific_name,
names = c("genus", "species"),
delim = " ",
cols_remove = F,
too_many="merge") %>%
mutate (source1 = "MAF")
# BOLD dataset
BOLD.species.list <- files.csv$`project-metadata_taxonomy.csv` %>%
clean_names() %>%
select (species) %>%
# Change genus names as appropriate (these cases are when BOLD Systems has not been updated yet)
mutate (species = str_replace(species, "Cromileptes", "Chromileptes"),
species = str_replace(species, "Xiphocheilus", "Choerodon"),
species = str_replace(species, "Ariomma brevimanum", "Ariomma brevimanus"),
species = str_replace(species, "Liopropoma sp.", "Liopropoma sp.1")
) %>%
mutate (barcode = "Y",
source2 = "BOLD") %>%
rename (scientific_name = species) %>%
distinct()
# Check unique species count
species_list_full <- c(MAF.species.list$scientific_name, BOLD.species.list$scientific_name) %>%
unique() %>% sort ()
species_list_unidentified <- species_list_full[which (grepl("sp.", species_list_full, fixed=T))]
species_list_identified_count <- length (species_list_full) - length (species_list_unidentified)
species_list_identified_count
knitr::opts_chunk$set(echo = TRUE
, results = 'hide'
, warning = FALSE
, message = FALSE
, fig.height = 5
, fig.width = 5
)
# Clear the global environment.
rm(list=ls())
# Set-up the working directory in the source file location:
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
wd <- getwd() # Do this after the working directory was set to source file location
# Assign directories to objects in the global environment
indir <- paste0("../data/")
outdir <- paste0("../results/")
scripts <- paste0("../scripts/")
# Check content of indir using list.files()
list.files(indir)
list.files(scripts)
pacman::p_load (
# Data wrangling
tidyverse, janitor,
# Plotting
cowplot,
# Interfacing with sequence data
ape, bold, bioseq, haplotypes, phangorn,
# Statistical calculations
rstatix)
# Fasta file of the alignment
## Make sure that the alignment is done outside R.
infile_fasta <- paste0(indir,
"20240115_bold-aln.fas")
infile_csv <- list.files(paste0(indir,
"BOLD-output"),
pattern = "\\.csv$",
full.names = T)
infile_csv_filenames <- list.files(paste0(indir,
"BOLD-output"),
pattern = "\\.csv$")
aln.fas <- read.FASTA(infile_fasta,
type = "DNA")
files.csv <- lapply (infile_csv,
read.csv,
na.strings = "N/A") %>%
map(., ~clean_names(.x))
names(files.csv) <- infile_csv_filenames
# MAF's appendix table 3
MAF.species.list <- readxl::read_xlsx(paste0(indir, "MAF_species-list.xlsx"),
sheet = "species-list") %>%
clean_names() %>%
select (family, scientific_name, data, barcode) %>%
distinct() %>%
separate_wider_delim(cols = scientific_name,
names = c("genus", "species"),
delim = " ",
cols_remove = F,
too_many="merge") %>%
mutate (source1 = "MAF")
# BOLD dataset
BOLD.species.list <- files.csv$`project-metadata_taxonomy.csv` %>%
clean_names() %>%
select (species) %>%
# Change genus names as appropriate (these cases are when BOLD Systems has not been updated yet)
mutate (species = str_replace(species, "Cromileptes", "Chromileptes"),
species = str_replace(species, "Xiphocheilus", "Choerodon"),
species = str_replace(species, "Ariomma brevimanum", "Ariomma brevimanus"),
species = str_replace(species, "Liopropoma sp.", "Liopropoma sp.1")
) %>%
mutate (barcode = "Y",
source2 = "BOLD") %>%
rename (scientific_name = species) %>%
distinct()
# Check unique species count
species_list_full <- c(MAF.species.list$scientific_name, BOLD.species.list$scientific_name) %>%
unique() %>% sort ()
species_list_unidentified <- species_list_full[which (grepl("sp.", species_list_full, fixed=T))]
species_list_identified_count <- length (species_list_full) - length (species_list_unidentified)
species_list_identified_count
# Join the two datasheets
master_list <- full_join (MAF.species.list, BOLD.species.list, by = c("scientific_name", "barcode")) %>%
# Change Scaridae to Labridae
mutate (family = str_replace (family, "Scaridae", "Labridae")) %>%
# Modify "data" field
mutate (data = case_when (barcode %in% "Y" ~ "with barcodes",
grepl ("MSD", data) ~ "MSD",
T ~ "FVC"))
# Check for discrepancies between the two datasets.
validate_list <- master_list %>% filter (barcode == "Y")
write.csv(validate_list, paste0(outdir, "validate_species_list.csv"))
knitr::opts_chunk$set(echo = TRUE
, results = 'hide'
, warning = FALSE
, message = FALSE
, fig.height = 5
, fig.width = 5
)
# Clear the global environment.
rm(list=ls())
# Set-up the working directory in the source file location:
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
wd <- getwd() # Do this after the working directory was set to source file location
# Assign directories to objects in the global environment
indir <- paste0("../data/")
outdir <- paste0("../results/")
scripts <- paste0("../scripts/")
# Check content of indir using list.files()
list.files(indir)
list.files(scripts)
pacman::p_load (
# Data wrangling
tidyverse, janitor,
# Plotting
cowplot,
# Interfacing with sequence data
ape, bold, bioseq, haplotypes, phangorn,
# Statistical calculations
rstatix)
# Fasta file of the alignment
## Make sure that the alignment is done outside R.
infile_fasta <- paste0(indir,
"20240115_bold-aln.fas")
infile_csv <- list.files(paste0(indir,
"BOLD-output"),
pattern = "\\.csv$",
full.names = T)
infile_csv_filenames <- list.files(paste0(indir,
"BOLD-output"),
pattern = "\\.csv$")
aln.fas <- read.FASTA(infile_fasta,
type = "DNA")
files.csv <- lapply (infile_csv,
read.csv,
na.strings = "N/A") %>%
map(., ~clean_names(.x))
names(files.csv) <- infile_csv_filenames
# MAF's appendix table 3
MAF.species.list <- readxl::read_xlsx(paste0(indir, "MAF_species-list.xlsx"),
sheet = "species-list") %>%
clean_names() %>%
select (family, scientific_name, data, barcode) %>%
distinct() %>%
separate_wider_delim(cols = scientific_name,
names = c("genus", "species"),
delim = " ",
cols_remove = F,
too_many="merge") %>%
mutate (source1 = "MAF")
# BOLD dataset
BOLD.species.list <- files.csv$`project-metadata_taxonomy.csv` %>%
clean_names() %>%
select (species) %>%
# Change genus names as appropriate (these cases are when BOLD Systems has not been updated yet)
mutate (species = str_replace(species, "Cromileptes", "Chromileptes"),
species = str_replace(species, "Xiphocheilus", "Choerodon"),
species = str_replace(species, "Ariomma brevimanum", "Ariomma brevimanus"),
species = str_replace(species, "Liopropoma sp.", "Liopropoma sp.1")
) %>%
mutate (barcode = "Y",
source2 = "BOLD") %>%
rename (scientific_name = species) %>%
distinct()
# Check unique species count
species_list_full <- c(MAF.species.list$scientific_name, BOLD.species.list$scientific_name) %>%
unique() %>% sort ()
species_list_unidentified <- species_list_full[which (grepl("sp.", species_list_full, fixed=T))]
species_list_identified_count <- length (species_list_full) - length (species_list_unidentified)
species_list_identified_count
list.files(indir)
# Join the two datasheets
master_list <- full_join (MAF.species.list, BOLD.species.list, by = c("scientific_name", "barcode")) %>%
# Change Scaridae to Labridae
mutate (family = str_replace (family, "Scaridae", "Labridae")) %>%
# Modify "data" field
mutate (data = case_when (barcode %in% "Y" ~ "with barcodes",
grepl ("MSD", data) ~ "MSD",
T ~ "FVC"))
# Check for discrepancies between the two datasets.
validate_list <- master_list %>% filter (barcode == "Y")
write.csv(validate_list, paste0(outdir, "validate_species_list.csv"))
knitr::opts_chunk$set(echo = TRUE
, results = 'hide'
, warning = FALSE
, message = FALSE
, fig.height = 5
, fig.width = 5
)
# Clear the global environment.
rm(list=ls())
# Set-up the working directory in the source file location:
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
wd <- getwd() # Do this after the working directory was set to source file location
# Assign directories to objects in the global environment
indir <- paste0("../data/")
outdir <- paste0("../results/")
scripts <- paste0("../scripts/")
# Check content of indir using list.files()
list.files(indir)
list.files(scripts)
pacman::p_load (
# Data wrangling
tidyverse, janitor,
# Plotting
cowplot,
# Interfacing with sequence data
ape, bold, bioseq, haplotypes, phangorn,
# Statistical calculations
rstatix)
# Fasta file of the alignment
## Make sure that the alignment is done outside R.
infile_fasta <- paste0(indir,
"20240115_bold-aln.fas")
infile_csv <- list.files(paste0(indir,
"BOLD-output"),
pattern = "\\.csv$",
full.names = T)
infile_csv_filenames <- list.files(paste0(indir,
"BOLD-output"),
pattern = "\\.csv$")
aln.fas <- read.FASTA(infile_fasta,
type = "DNA")
files.csv <- lapply (infile_csv,
read.csv,
na.strings = "N/A") %>%
map(., ~clean_names(.x))
names(files.csv) <- infile_csv_filenames
# MAF's appendix table 3
MAF.species.list <- readxl::read_xlsx(paste0(indir, "MAF_species-list.xlsx"),
sheet = "species-list") %>%
clean_names() %>%
select (family, scientific_name, data, barcode) %>%
distinct() %>%
separate_wider_delim(cols = scientific_name,
names = c("genus", "species"),
delim = " ",
cols_remove = F,
too_many="merge") %>%
mutate (source1 = "MAF")
# BOLD dataset
BOLD.species.list <- files.csv$`project-metadata_taxonomy.csv` %>%
clean_names() %>%
select (species) %>%
# Change genus names as appropriate (these cases are when BOLD Systems has not been updated yet)
mutate (species = str_replace(species, "Cromileptes", "Chromileptes"),
species = str_replace(species, "Xiphocheilus", "Choerodon"),
species = str_replace(species, "Ariomma brevimanum", "Ariomma brevimanus"),
species = str_replace(species, "Liopropoma sp.", "Liopropoma sp.1")
) %>%
mutate (barcode = "Y",
source2 = "BOLD") %>%
rename (scientific_name = species) %>%
distinct()
# Check unique species count
species_list_full <- c(MAF.species.list$scientific_name, BOLD.species.list$scientific_name) %>%
unique() %>% sort ()
species_list_unidentified <- species_list_full[which (grepl("sp.", species_list_full, fixed=T))]
species_list_identified_count <- length (species_list_full) - length (species_list_unidentified)
species_list_identified_count
# Join the two datasheets
master_list <- full_join (MAF.species.list, BOLD.species.list, by = c("scientific_name", "barcode")) %>%
# Change Scaridae to Labridae
mutate (family = str_replace (family, "Scaridae", "Labridae")) %>%
# Modify "data" field
mutate (data = case_when (barcode %in% "Y" ~ "with barcodes",
grepl ("MSD", data) ~ "MSD",
T ~ "FVC"))
# Check for discrepancies between the two datasets.
validate_list <- master_list %>% filter (barcode == "Y")
write.csv(validate_list, paste0(outdir, "validate_species_list.csv"))
# Join the two datasheets
master_list <- full_join (MAF.species.list, BOLD.species.list, by = c("scientific_name", "barcode")) %>%
# Change Scaridae to Labridae
mutate (family = str_replace (family, "Scaridae", "Labridae")) %>%
# Modify "data" field
mutate (data = case_when (barcode %in% "Y" ~ "with barcodes",
grepl ("MSD", data) ~ "MSD",
T ~ "FVC"))
# Check for discrepancies between the two datasets.
validate_list <- master_list %>% filter (barcode == "Y")
write.csv(validate_list, paste0(outdir, "validate_species_list.csv"))
knitr::opts_chunk$set(echo = TRUE
, results = 'hide'
, warning = FALSE
, message = FALSE
, fig.height = 5
, fig.width = 5
)
# Clear the global environment.
rm(list=ls())
# Set-up the working directory in the source file location:
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
wd <- getwd() # Do this after the working directory was set to source file location
# Assign directories to objects in the global environment
indir <- paste0("../data/")
outdir <- paste0("../results/")
scripts <- paste0("../scripts/")
# Check content of indir using list.files()
list.files(indir)
list.files(scripts)
pacman::p_load (
# Data wrangling
tidyverse, janitor,
# Plotting
cowplot,
# Interfacing with sequence data
ape, bold, bioseq, haplotypes, phangorn,
# Statistical calculations
rstatix)
# Fasta file of the alignment
## Make sure that the alignment is done outside R.
infile_fasta <- paste0(indir,
"20240115_bold-aln.fas")
infile_csv <- list.files(paste0(indir,
"BOLD-output"),
pattern = "\\.csv$",
full.names = T)
infile_csv_filenames <- list.files(paste0(indir,
"BOLD-output"),
pattern = "\\.csv$")
aln.fas <- read.FASTA(infile_fasta,
type = "DNA")
files.csv <- lapply (infile_csv,
read.csv,
na.strings = "N/A") %>%
map(., ~clean_names(.x))
names(files.csv) <- infile_csv_filenames
# MAF's appendix table 3
MAF.species.list <- readxl::read_xlsx(paste0(indir, "MAF_species-list.xlsx"),
sheet = "species-list") %>%
clean_names() %>%
select (family, scientific_name, data, barcode) %>%
distinct() %>%
separate_wider_delim(cols = scientific_name,
names = c("genus", "species"),
delim = " ",
cols_remove = F,
too_many="merge") %>%
mutate (source1 = "MAF")
# BOLD dataset
BOLD.species.list <- files.csv$`project-metadata_taxonomy.csv` %>%
clean_names() %>%
select (species) %>%
# Change genus names as appropriate (these cases are when BOLD Systems has not been updated yet)
mutate (species = str_replace(species, "Cromileptes", "Chromileptes"),
species = str_replace(species, "Xiphocheilus", "Choerodon"),
species = str_replace(species, "Ariomma brevimanum", "Ariomma brevimanus"),
species = str_replace(species, "Liopropoma sp.", "Liopropoma sp.1")
) %>%
mutate (barcode = "Y",
source2 = "BOLD") %>%
rename (scientific_name = species) %>%
distinct()
# Check unique species count
species_list_full <- c(MAF.species.list$scientific_name, BOLD.species.list$scientific_name) %>%
unique() %>% sort ()
species_list_unidentified <- species_list_full[which (grepl("sp.", species_list_full, fixed=T))]
species_list_identified_count <- length (species_list_full) - length (species_list_unidentified)
species_list_identified_count
# Join the two datasheets
master_list <- full_join (MAF.species.list, BOLD.species.list, by = c("scientific_name", "barcode")) %>%
# Change Scaridae to Labridae
mutate (family = str_replace (family, "Scaridae", "Labridae")) %>%
# Modify "data" field
mutate (data = case_when (barcode %in% "Y" ~ "with barcodes",
grepl ("MSD", data) ~ "MSD",
T ~ "FVC"))
# Check for discrepancies between the two datasets.
validate_list <- master_list %>% filter (barcode == "Y")
write.csv(validate_list, paste0(outdir, "validate_species_list.csv"))
species_list_unidentified
